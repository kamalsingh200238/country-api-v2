import { useEffect, useState } from "react";
import Link from "next/link";
import Image from "next/image";
import Head from "next/head";
import ReactPaginate from "react-paginate";
import wretch from "wretch";

import CardDetail from "@/components/CardDetail";
import DropDown from "@/components/DropDown";
import { CountryData } from "@/types";

export async function getStaticProps() {
  const data = (await wretch("https://restcountries.com/v3.1/all")
    .get()
    .json()
    .catch((error) => {
      console.log("There was an error =========>", error);
    })) as CountryData[];

  return {
    props: {
      data: data,
    },
  };
}

interface Props {
  data: CountryData[];
}

export default function Home({ data }: Props) {
  const [query, setQuery] = useState(""); // state for query
  const [regionFilter, setRegionFilter] = useState(""); // state for region filter

  const [paginationActivePage, setPaginationActivePage] = useState(1); // state for active pagination number
  const [itemsPerPagination] = useState(12); // state for number of items in single page

  const filteredData = data.filter((country) => {
    // check if current country's region matches the selected region
    if (country.region.toLowerCase().includes(regionFilter.toLowerCase())) {
      // check if the country's name matches query
      return (
        country.name.common.toLowerCase().includes(query.toLowerCase()) ||
        country.name.official.toLowerCase().includes(query.toLowerCase())
      );
    } else {
      // if flase return false so that country get skipped
      return false;
    }
  });

  const indexOfLastPost = paginationActivePage * itemsPerPagination; // index of last post in active page
  const indexOfFirstPost = indexOfLastPost - itemsPerPagination; // index of first post in active page
  const paginationLength = Math.ceil(filteredData.length / itemsPerPagination); // number of total pagination number

  const activePaginationData = filteredData.slice(
    indexOfFirstPost,
    indexOfLastPost
  );

  function paginate({ selected }: { selected: number }) {
    setPaginationActivePage(selected + 1);
  }

  useEffect(() => {
    setPaginationActivePage(1);
  }, [query, regionFilter]);

  return (
    <>
      <Head>
        <title>World wise</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <main className="">
        <section className="py-8 px-5 dark:bg-primary dark:text-white md:px-10">
          <div className="mx-auto max-w-7xl">
            <div className="mb-10 flex flex-col justify-between gap-10 md:flex-row md:gap-0">
              <input
                type="search"
                placeholder="Search for country"
                value={query}
                onChange={(e) => {
                  setQuery(e.target.value);
                }}
                className="max-w-md rounded-md border border-gray-300 shadow-lg focus:border-primary focus:outline-none focus-visible:ring-2 focus-visible:ring-primary dark:border-none dark:bg-secondary dark:text-white dark:placeholder:text-white/50 dark:focus:border-white dark:focus-visible:ring-white"
              />
              <DropDown setRegionFilter={setRegionFilter} />
            </div>
            <div className="grid grid-cols-1 gap-14 sm:grid-cols-2 lg:grid-cols-4">
              {activePaginationData.map((country) => {
                const capital = country?.capital?.[0] ?? "";
                return (
                  <Link
                    key={country.name.common}
                    href={`/country/${country.cca3}`}
                    className="block overflow-clip rounded-md shadow-lg transition-all duration-200 hover:scale-105 focus:outline-none focus-visible:ring-4 focus-visible:ring-primary dark:focus-visible:ring-white"
                  >
                    <div className="">
                      <div className="relative isolate aspect-video w-full">
                        <Image
                          src={country.flags.svg}
                          alt={
                            country.flags?.alt ??
                            `Flag of ${country.name.common}`
                          }
                          fill={true}
                          className="object-cover"
                        />
                      </div>
                      <div className="px-5 py-8 dark:bg-secondary">
                        <p className="mb-2 text-lg font-bold lg:text-xl">
                          {country.name.common}
                        </p>
                        <CardDetail
                          detail="Population"
                          value={country.population.toLocaleString("en-US")}
                        />
                        <CardDetail detail="Region" value={country.region} />
                        <CardDetail detail="Capital" value={capital} />
                      </div>
                    </div>
                  </Link>
                );
              })}
            </div>
            <div className="max-w-full py-14">
              <ReactPaginate
                onPageChange={paginate}
                pageCount={paginationLength}
                pageRangeDisplayed={2}
                marginPagesDisplayed={1}
                previousLabel={"<"}
                nextLabel={">"}
                containerClassName={
                  "flex flex-wrap item-center justify-center mx-auto text-slate-100"
                }
                previousLinkClassName={
                  "bg-slate-900 grid place-items-center h-full p-2 rounded-l-md border-r border-r-white"
                }
                pageClassName={"bg-slate-900"}
                pageLinkClassName={"grid place-items-center h-full p-2"}
                activeLinkClassName={"bg-blue-600"}
                breakClassName={"p-1 bg-gray-400 text-gray-900"}
                nextLinkClassName={
                  "grid place-items-center h-full p-2 rounded-r-md bg-slate-900 border-l border-l-white"
                }
              />
            </div>
          </div>
        </section>
      </main>
    </>
  );
}
